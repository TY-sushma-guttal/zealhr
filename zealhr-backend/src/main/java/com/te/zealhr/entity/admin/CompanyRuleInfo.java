package com.te.zealhr.entity.admin;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Convert;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.te.zealhr.audit.Audit;
import com.te.zealhr.entity.employee.EmployeePerformanceRule;
import com.te.zealhr.util.LinkedHashMapToStringConverter;
import com.te.zealhr.util.TicketCategoryConverter;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Table(name = "fa_company_rule_info")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(value = Include.USE_DEFAULTS)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "ruleId")
public class CompanyRuleInfo extends Audit implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "cri_rule_id", unique = true, nullable = false, precision = 19)
	private Long ruleId;

	@Column(name = "cri_fiscal_year", length = 4)
	private String fiscalYear;

	@Column(name = "cri_probation_period", precision = 2, scale = 2)
	private BigDecimal probationPeriod;

	@Column(name = "cri_no_of_cl_per_month", precision = 2, scale = 2)
	private BigDecimal noOfClPerMonth;

	@Column(name = "cri_cl_activation_month", length = 25)
	private String clActivationMonth;

	@Column(name = "cri_reserved_cl_activation", length = 25)
	private String reservedClActivation;

	@Column(name = "cri_apprisal_cycle", length = 25)
	private String apprisalCycle;

	@Column(name = "cri_is_casual_leave_earned_leave", precision = 3)
	private Boolean isCasualLeaveEarnedLeave;

	@Column(name = "cri_is_chat_box_enabled", precision = 3)
	private Boolean isChatBoxEnabled;

	@Column(name = "cri_is_regularization_enabled", precision = 3)
	private Boolean isRegularizationEnabled;

	@Column(name = "cri_attendance_type", length = 20)
	private String attendanceType;

	@Column(name = "cri_is_id_auto_generated", precision = 3)
	private Boolean isIdAutoGenerated;

	@Column(name = "cri_id_generation_rule")
	@Convert(converter = LinkedHashMapToStringConverter.class)
	private LinkedHashMap<String, String> idGenerationRule;

	@Column(name = "cri__employee_id_series")
	private Long lastEmployeeIdSeries;
	
	@Column(name = "cri_id_ticket_categories")
	@Convert(converter = TicketCategoryConverter.class)
	private HashMap<String, HashMap<String, String>> ticketCategories;

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "companyRuleInfo")
	private List<CompanyLeaveInfo> companyLeaveInfoList;

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "cri_company_id")
	private CompanyInfo companyInfo;

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "companyRuleInfo")
	private List<CompanyShiftInfo> companyShiftInfoList;

	@OneToOne(cascade = CascadeType.ALL, mappedBy = "companyRuleInfo")
	private EmployeePerformanceRule employeePerformanceRule;

}
